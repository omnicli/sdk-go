name: Build

on:
  push:
    branches:
      - main

    tags:
      - v*

  pull_request:

  schedule:
    - cron: "0 0 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CI: 'true'

jobs:
  prepare-env:
    name: Prepare environment
    runs-on: "ubuntu-latest"

    outputs:
      requires_tests: ${{ env.REQUIRES_TESTS }}
      publish_release: ${{ env.PUBLISH_RELEASE }}
      release_version: ${{ env.RELEASE_VERSION }}

    steps:
      - name: Check if tests should happen no matter the files
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          REQUIRES_TESTS=false
          if [[ "$GITHUB_EVENT_NAME" == "schedule" ]] || \
             [[ "$GITHUB_EVENT_NAME" == "push" && "$GITHUB_REF" == "refs/heads/main" ]] || \
             [[ "$GITHUB_EVENT_NAME" == "push" && "$GITHUB_REF" == "refs/tags/v"* ]]; then
            REQUIRES_TESTS=true
          fi
          echo "REQUIRES_TESTS=${REQUIRES_TESTS}" | tee -a "$GITHUB_ENV"

      - name: Checkout current commit
        uses: "actions/checkout@v4"
        if: ${{ env.REQUIRES_TESTS != 'true' }}

      - name: Get the changed files that would require tests
        id: changed-files
        uses: "tj-actions/changed-files@v45"
        if: ${{ env.REQUIRES_TESTS != 'true' }}
        with:
          files_yaml: |
            source_code:
              go.mod
              *.go
              .github/workflows/build.yaml

      - name: Identify if testing is required
        if: ${{ env.REQUIRES_TESTS != 'true' }}
        env:
          CHANGED_FILES: ${{ steps.changed-files.outputs.source_code_any_changed }}
          DELETED_FILES: ${{ steps.changed-files.outputs.source_code_any_deleted }}
          MODIFIED_FILES: ${{ steps.changed-files.outputs.source_code_any_modified }}
        run: |
          REQUIRES_TESTS=false
          if [[ "$CHANGED_FILES" == "true" ]] || \
             [[ "$DELETED_FILES" == "true" ]] || \
             [[ "$MODIFIED_FILES" == "true" ]]; then
            REQUIRES_TESTS=true
          fi
          echo "REQUIRES_TESTS=${REQUIRES_TESTS}" | tee -a "$GITHUB_ENV"


  lint:
    name: Checking lint
    runs-on: ubuntu-latest

    needs:
      - prepare-env

    if: needs.prepare-env.outputs.requires_tests == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Run linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60.1


  tests:
    name: Tests
    runs-on: "ubuntu-latest"

    needs:
      - prepare-env

    if: needs.prepare-env.outputs.requires_tests == 'true'

    steps:
      - name: Checkout current commit
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Run unit & integration tests
        id: tests
        run: |
          go test ./...


  results:
    name: Aggregate test results
    runs-on: ubuntu-latest

    needs:
      - lint
      - tests

    if: always()

    steps:
      - name: Fail if lint failed
        if: needs.lint.result == 'failure'
        run: exit 1

      - name: Fail if tests failed
        if: needs.tests.result == 'failure'
        run: exit 1
